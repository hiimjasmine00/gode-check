# Some ideas were taken from https://github.com/geode-sdk/cli/blob/v3.4.0/.github/workflows/build.yml

name: Build Binaries
on:
  workflow_dispatch:
  push:
    paths:
      - "src/**"
      - "Cargo.lock"
      - "Cargo.toml"
      - ".github/workflows/build.yml"
    branches:
      - "**"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        config:
          - name: Windows
            runs-on: ubuntu-latest
            id: windows-x64
            executable: gode-check.exe
            target: x86_64-pc-windows-gnu

          - name: macOS
            runs-on: macos-latest
            id: macos-x64
            executable: gode-check
            target: x86_64-apple-darwin

          - name: Linux
            runs-on: ubuntu-latest
            id: linux-x64
            executable: gode-check
            target: x86_64-unknown-linux-gnu

          - name: Android
            runs-on: ubuntu-latest
            id: android-aarch64
            executable: gode-check
            target: aarch64-linux-android

    name: Build ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.runs-on }}

    steps:
      - uses: actions/checkout@v5

      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          targets: ${{ matrix.config.target }}
  
      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.config.id }}

      - name: Setup Android NDK
        if: matrix.config.target == 'aarch64-linux-android'
        run: |
          sudo rm -f /var/lib/man-db/auto-update
          sudo apt-get install -yq lib32stdc++6 lib32z1
          rustup target add aarch64-linux-android
          echo "CARGO_TARGET_AARCH64_LINUX_ANDROID_LINKER=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang" >> $GITHUB_ENV
          echo "$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin" >> $GITHUB_PATH

      - name: Build
        run: |
          if [ "${{ matrix.config.target }}" = "x86_64-pc-windows-gnu" ]; then
            sudo rm -f /var/lib/man-db/auto-update
            sudo apt-get install gcc-mingw-w64-x86-64
            SUFFIX="-${{ matrix.config.id }}.exe"
          else
            SUFFIX="-${{ matrix.config.id }}"
          fi
          cargo build --target ${{ matrix.config.target }} --release
          mkdir ./output
          VERSION=$(grep '^version =' Cargo.toml | sed 's/version = "\(.*\)"/\1/')
          mv ./target/${{ matrix.config.target }}/release/${{ matrix.config.executable }} ./output/gode-check-${VERSION}${SUFFIX}

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: gode-check-${{ matrix.config.id }}
          path: ./output/

  draft:
    name: Create Draft Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Download Artifacts
        uses: actions/download-artifact@v5
        with:
          merge-multiple: true
          path: artifacts

      - name: List Artifacts
        run: ls -la artifacts

      - name: Read Version
        id: read_version
        run: |
          VERSION=$(grep '^version =' Cargo.toml | sed 's/version = "\(.*\)"/\1/')
          echo "Version is $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create Draft Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: ./artifacts/*
          tag_name: v${{ steps.read_version.outputs.version }}
          name: v${{ steps.read_version.outputs.version }}
          draft: true
          prerelease: false
